.TH "openFSL::DiskDevice" 3 "Tue May 25 2021" "OpenFSL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
openFSL::DiskDevice \- Disk driver\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <diskdevice\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDiskDevice\fP (uint32_t bytespersector_=512)"
.br
.RI "\fBDiskDevice\fP constructor\&. "
.ti -1c
.RI "\fB~DiskDevice\fP ()"
.br
.RI "\fBDiskDevice\fP destructor\&. "
.ti -1c
.RI "void \fBinitialize\fP ()"
.br
.RI "\fBDiskDevice\fP initializer\&. "
.ti -1c
.RI "void \fBclose\fP ()"
.br
.RI "\fBDiskDevice\fP closer\&. "
.ti -1c
.RI "uint32_t \fBgetState\fP ()"
.br
.RI "Error state getter\&. "
.ti -1c
.RI "uint32_t \fBgetBytespersector\fP ()"
.br
.RI "\fBSector\fP size getter\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int(* \fBopenDisk\fP )()"
.br
.RI "Disk open function wrapper\&. "
.ti -1c
.RI "int(* \fBreadDisk\fP )(\fBSector\fP *, vint_arch, vint_arch)"
.br
.RI "Disk read function wrapper\&. "
.ti -1c
.RI "int(* \fBcloseDisk\fP )()"
.br
.RI "Disk close function wrapper\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "uint32_t \fBerrorState\fP = \fBDISKDEV_ERROR_NOT_INITIALIZED\fP"
.br
.ti -1c
.RI "uint32_t \fBbytespersector\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Disk driver\&. 

Disk driver class with open, read, write(--), close function 
.PP
\fBAuthor\fP
.RS 4
kms1212 
.RE
.PP
\fBTodo\fP
.RS 4
Write function wrapper
.RE
.PP

.PP
Definition at line 23 of file diskdevice\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "DiskDevice::DiskDevice (uint32_t bytespersector_ = \fC512\fP)"

.PP
\fBDiskDevice\fP constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIbytespersector_\fP = 512: Bytes per sector 
.RE
.PP

.PP
Definition at line 5 of file diskdevice\&.cpp\&.
.SS "DiskDevice::~DiskDevice ()"

.PP
\fBDiskDevice\fP destructor\&. 
.PP
Definition at line 28 of file diskdevice\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void DiskDevice::close ()"

.PP
\fBDiskDevice\fP closer\&. Stops disk driver\&. 
.PP
Definition at line 33 of file diskdevice\&.cpp\&.
.SS "uint32_t DiskDevice::getBytespersector ()"

.PP
\fBSector\fP size getter\&. Gets bytes per sector\&. 
.PP
\fBReturns\fP
.RS 4
uint32_t: Bytes per sector 
.RE
.PP

.PP
Definition at line 45 of file diskdevice\&.cpp\&.
.SS "uint32_t DiskDevice::getState ()"

.PP
Error state getter\&. Gets error state\&. 
.PP
\fBReturns\fP
.RS 4
uint32_t: Error state 
.RE
.PP

.PP
Definition at line 41 of file diskdevice\&.cpp\&.
.SS "void DiskDevice::initialize ()"

.PP
\fBDiskDevice\fP initializer\&. Initializes Disk driver\&. Function checks function wrappers: 
.PD 0

.IP "\(bu" 2
\fBopenDisk()\fP 
.IP "\(bu" 2
\fBreadDisk()\fP 
.IP "\(bu" 2
writeDisk() (--) 
.IP "\(bu" 2
\fBcloseDisk()\fP 
.PP

.PP
Definition at line 9 of file diskdevice\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "uint32_t openFSL::DiskDevice::bytespersector\fC [private]\fP"

.PP
Definition at line 26 of file diskdevice\&.h\&.
.SS "int(* openFSL::DiskDevice::closeDisk) ()"

.PP
Disk close function wrapper\&. Closes disk\&. 
.PP
\fBReturns\fP
.RS 4
int: Error code 
.RE
.PP

.PP
Definition at line 111 of file diskdevice\&.h\&.
.SS "uint32_t openFSL::DiskDevice::errorState = \fBDISKDEV_ERROR_NOT_INITIALIZED\fP\fC [private]\fP"

.PP
Definition at line 25 of file diskdevice\&.h\&.
.SS "int(* openFSL::DiskDevice::openDisk) ()"

.PP
Disk open function wrapper\&. Opens disk\&. 
.PP
\fBReturns\fP
.RS 4
int: Error code 
.RE
.PP

.PP
Definition at line 90 of file diskdevice\&.h\&.
.SS "int(* openFSL::DiskDevice::readDisk) (\fBSector\fP *, vint_arch, vint_arch)"

.PP
Disk read function wrapper\&. Reads disk and stores data by sector\&. 
.PP
\fBParameters\fP
.RS 4
\fISector*\fP dest: buffer to store data 
.br
\fIvint_arch\fP lba 
.br
\fIvint_arch\fP size 
.RE
.PP
\fBReturns\fP
.RS 4
int: Error code 
.RE
.PP

.PP
Definition at line 102 of file diskdevice\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for OpenFSL from the source code\&.
