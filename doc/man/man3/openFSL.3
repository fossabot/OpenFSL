.TH "openFSL" 3 "Tue May 25 2021" "OpenFSL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
openFSL
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBDiskDevice\fP"
.br
.RI "Disk driver\&. "
.ti -1c
.RI "struct \fBfatBPBStruct\fP"
.br
.RI "FAT32 BIOS Parameter Block\&. "
.ti -1c
.RI "struct \fBfatFSINFOStruct\fP"
.br
.RI "FAT32 FSINFO structure\&. "
.ti -1c
.RI "struct \fBfileEntryStruct\fP"
.br
.RI "FAT32 directory entry struct\&. "
.ti -1c
.RI "struct \fBfileInfoStruct\fP"
.br
.RI "FAT32 file information\&. "
.ti -1c
.RI "struct \fBfileTimeStruct\fP"
.br
.RI "FAT32 time\&. "
.ti -1c
.RI "class \fBFS_FAT32\fP"
.br
.RI "FAT32 imeplementation\&. "
.ti -1c
.RI "struct \fBlfnEntryStruct\fP"
.br
.RI "FAT32 directory entry for LFN\&. "
.ti -1c
.RI "class \fBSector\fP"
.br
.RI "\fBSector\fP buffer\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBopenFSL::fatBPBStruct\fP \fBFAT32_bpb\fP"
.br
.RI "FAT32 BIOS Parameter Block\&. "
.ti -1c
.RI "typedef struct \fBopenFSL::fileTimeStruct\fP \fBFAT32_fileInfoTime\fP"
.br
.RI "FAT32 time\&. "
.ti -1c
.RI "typedef struct \fBopenFSL::fatFSINFOStruct\fP \fBFAT32_fsinfo\fP"
.br
.RI "FAT32 FSINFO structure\&. "
.ti -1c
.RI "typedef struct \fBopenFSL::fileEntryStruct\fP \fBFAT32_entry\fP"
.br
.RI "FAT32 directory entry struct\&. "
.ti -1c
.RI "typedef struct \fBopenFSL::lfnEntryStruct\fP \fBFAT32_lfn\fP"
.br
.RI "FAT32 directory entry for LFN\&. "
.ti -1c
.RI "typedef struct \fBopenFSL::fileInfoStruct\fP \fBFAT32_fileInfo\fP"
.br
.RI "FAT32 file information\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBFAT32_Option\fP { \fBFAT32_OPTION_NONE\fP = 0x00000000, \fBFAT32_OPTION_LFN\fP = 0x00000001 }"
.br
.RI "FAT32 option\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBinitializeLibrary\fP ()"
.br
.RI "Library initializer\&. "
.ti -1c
.RI "void \fBfsl_strtokenize\fP (const std::string &str, std::vector< std::string > &tokens, const std::string &delimiters)"
.br
.RI "String tokenizer\&. "
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBopenFSL::fatBPBStruct\fP \fBopenFSL::FAT32_bpb\fP"

.PP
FAT32 BIOS Parameter Block\&. 
.PP
\fBAuthor\fP
.RS 4
kms1212
.RE
.PP
Type Name Offset  uint8_t bpbJumpCode[3] 0x0000  uint8_t bpbOEMName[8] 0x0003  uint16_t bpbBytesPerSector 0x000B  uint8_t bpbSectorPerCluster 0x000D  uint16_t bpbReservedSectors 0x000E  uint8_t bpbFATCount 0x0010  uint16_t bpbRootEntries 0x0011  uint16_t bpbTotalSectors 0x0013  uint8_t bpbMedia 0x0015  uint16_t bpbSectorsPerFAT16 0x0016  uint16_t bpbSectorsPerTrack 0x0018  uint16_t bpbDiskHeads 0x001A  uint32_t bpbHiddenSectors 0x001C  uint32_t bpbTotalSector32 0x0020  uint32_t ebpbSectorsPerFAT32 0x0024  uint16_t ebpbFlags 0x0028  uint16_t ebpbFSVersion 0x002A  uint32_t ebpbRootDirectoryCluster 0x002C  uint16_t ebpbFSInfoSector 0x0030  uint16_t ebpbBSBackupSector 0x0032  uint8_t ebpbReserved1[12] 0x0034  uint8_t ebpbPhysicalDriveNum 0x0040  uint8_t ebpbReserved2 0x0041  uint8_t ebpbExtendedBootSign 0x0042  uint32_t ebpbVolumeSerial 0x0043  uint8_t ebpbVolumeLabel[11] 0x0047  uint8_t ebpbFSType[8] 0x0052  uint8_t bpbBootCode[420] 0x005A  uint16_t bpbVBRSignature 0x01FE  
.SS "typedef struct \fBopenFSL::fileEntryStruct\fP \fBopenFSL::FAT32_entry\fP"

.PP
FAT32 directory entry struct\&. 
.PP
\fBAuthor\fP
.RS 4
kms1212
.RE
.PP
Type Name Offset  uint8_t fileName[8] 0x00  uint8_t fileExt[3] 0x08  uint8_t fileAttr 0x0B  uint8_t fileReserved1 0x0C  uint8_t fileCreateTenth 0x0D  uint16_t fileCreateTime 0x0E  uint16_t fileCreateDate 0x10  uint16_t fileAccessDate 0x12  uint16_t fileLocationHigh 0x14  uint16_t fileModTime 0x16  uint16_t fileModDate 0x18  uint16_t fileLocationLow 0x1A  uint32_t fileSize 0x1C  
.SS "typedef struct \fBopenFSL::fileInfoStruct\fP \fBopenFSL::FAT32_fileInfo\fP"

.PP
FAT32 file information\&. 
.PP
\fBAuthor\fP
.RS 4
kms1212
.RE
.PP
Type Name  std::string fileName  uint8_t fileAttr  FAT32_fileInfoTime fileCreateTime  FAT32_fileInfoTime fileAccessTime  FAT32_fileInfoTime fileModTime  uint32_t fileLocation  uint32_t fileSize  
.SS "typedef struct \fBopenFSL::fileTimeStruct\fP \fBopenFSL::FAT32_fileInfoTime\fP"

.PP
FAT32 time\&. 
.PP
\fBAuthor\fP
.RS 4
kms1212
.RE
.PP
Type Name  uint8_t time_tenth  uint8_t time_sec  uint8_t time_min  uint8_t time_hour  uint8_t time_day  uint8_t time_month  uint16_t time_year  
.SS "typedef struct \fBopenFSL::fatFSINFOStruct\fP \fBopenFSL::FAT32_fsinfo\fP"

.PP
FAT32 FSINFO structure\&. 
.PP
\fBAuthor\fP
.RS 4
kms1212
.RE
.PP
Type Name Offset  uint32_t fsinfoSignature1 0x0000  uint8_t fsinfoReserved1[480] 0x0004  uint32_t fsinfoSignature2 0x01E4  uint32_t fsinfoFreeCluster 0x01E8  uint32_t fsinfoNextFree 0x01EC  uint8_t fsinfoReserved2[12] 0x01F0  uint32_t fsinfoSignature3 0x01FE  
.SS "typedef struct \fBopenFSL::lfnEntryStruct\fP \fBopenFSL::FAT32_lfn\fP"

.PP
FAT32 directory entry for LFN\&. 
.PP
\fBAuthor\fP
.RS 4
kms1212
.RE
.PP
Type Name Offset  uint8_t lfnSeqNum 0x00  uint16_t lfnFileName1[5] 0x01  uint8_t lfnAttr 0x0B  uint8_t lfnReserved1 0x0C  uint8_t lfnCheckSum 0x0D  uint16_t lfnFileName2[6] 0x0E  uint16_t lfnLocationLow 0x1A  uint16_t lfnFileName3[2] 0x1C  
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBopenFSL::FAT32_Option\fP"

.PP
FAT32 option\&. 
.PP
\fBAuthor\fP
.RS 4
kms1212
.RE
.PP
Option Value  FAT32_OPTION_NONE 0x00000000  FAT32_OPTION_LFN 0x00000001  
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFAT32_OPTION_NONE \fP\fP
.TP
\fB\fIFAT32_OPTION_LFN \fP\fP
.PP
Definition at line 37 of file fs_fat32\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void openFSL::fsl_strtokenize (const std::string & str, std::vector< std::string > & tokens, const std::string & delimiters)"

.PP
String tokenizer\&. 
.PP
Definition at line 14 of file fslservices\&.cpp\&.
.SS "int openFSL::initializeLibrary ()"

.PP
Library initializer\&. 
.PP
\fBReturns\fP
.RS 4
int: Error code 
.RE
.PP

.PP
Definition at line 9 of file fslservices\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OpenFSL from the source code\&.
